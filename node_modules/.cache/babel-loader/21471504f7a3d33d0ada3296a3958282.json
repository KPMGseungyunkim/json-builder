{"ast":null,"code":"var _jsxFileName = \"/Users/seungyunkim/Desktop/json-builder/src/pages/kccm/components/PdfViewer.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { pdfjs, Document, Page } from 'react-pdf';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport styled from \"styled-components\";\nimport * as Api from '../Api';\nimport sampleFile from '../resources/sample_kpmg.pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled.div`\n    .pagination{\n        display: flex;\n        justify-content: center;\n        flex-direction: row;\n        align-self: center;\n        align-items: center;\n        width: 100%;\n    }\n    .prev-btn{\n        margin-right: .5rem;\n    }\n    .next-btn{\n        margin-left: .5rem;\n    }\n`;\n_c = StyledContainer;\nexport default function PdfViewer({\n  pdfUrl\n}) {\n  _s();\n\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n\n  var file;\n\n  if (pdfUrl === '') {\n    file = sampleFile;\n  } else {\n    file = Api.getFilePdfApi + pdfUrl;\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Document, {\n      file: file // file={Api.getFilePdfApi + pdfUrl} \n      ,\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"prev-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => pageNumber > 1 ? setPageNumber(pageNumber - 1) : null,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 122\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Page \", pageNumber, \" of \", numPages, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"next-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          color: \"primary\",\n          onClick: () => pageNumber < numPages ? setPageNumber(pageNumber + 1) : null,\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 145\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PdfViewer, \"YLJz20aPqXTJ8p9+Yj/tBc0QyPE=\");\n\n_c2 = PdfViewer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"PdfViewer\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/json-builder/src/pages/kccm/components/PdfViewer.js"],"names":["Button","React","useState","pdfjs","Document","Page","ChevronRightIcon","ChevronLeftIcon","styled","Api","sampleFile","StyledContainer","div","PdfViewer","pdfUrl","GlobalWorkerOptions","workerSrc","version","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","file","getFilePdfApi"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,WAAtC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;KAAMD,e;AAkBN,eAAe,SAASE,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAAA;;AACzCX,EAAAA,KAAK,CAACY,mBAAN,CAA0BC,SAA1B,GAAuC,2CAA0Cb,KAAK,CAACc,OAAQ,gBAA/F;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMoB,qBAAqB,GAAG,CAAC;AAAEJ,IAAAA;AAAF,GAAD,KAAkB;AAC5CC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAFD;;AAIA,MAAIK,IAAJ;;AACA,MAAGT,MAAM,KAAG,EAAZ,EAAe;AACXS,IAAAA,IAAI,GAAGb,UAAP;AACH,GAFD,MAGI;AACAa,IAAAA,IAAI,GAAGd,GAAG,CAACe,aAAJ,GAAoBV,MAA3B;AACH;;AAED,sBACI,QAAC,eAAD;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,IAAI,EAAES,IADV,CAEI;AAFJ;AAGI,MAAA,aAAa,EAAED,qBAHnB;AAAA,6BAII,QAAC,IAAD;AAAM,QAAA,UAAU,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA,+BAA6B;AAAM,UAAA,OAAO,EAAE,MAAMA,UAAU,GAAG,CAAb,GAAiBC,aAAa,CAACD,UAAU,GAAG,CAAd,CAA9B,GAAiD,IAAtE;AAAA,iCAA4E,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAaA,UAAb,UAA6BF,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA,+BAA6B;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,OAAO,EAAE,MAAME,UAAU,GAAGF,QAAb,GAAwBG,aAAa,CAACD,UAAU,GAAG,CAAd,CAArC,GAAwD,IAA7F;AAAA,iCAAmG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAnG;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAjCuBP,S;;MAAAA,S","sourcesContent":["import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { pdfjs, Document, Page } from 'react-pdf';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport styled from \"styled-components\";\nimport * as Api from '../Api';\nimport sampleFile from '../resources/sample_kpmg.pdf';\n\nconst StyledContainer = styled.div`\n    .pagination{\n        display: flex;\n        justify-content: center;\n        flex-direction: row;\n        align-self: center;\n        align-items: center;\n        width: 100%;\n    }\n    .prev-btn{\n        margin-right: .5rem;\n    }\n    .next-btn{\n        margin-left: .5rem;\n    }\n`;\n\n\nexport default function PdfViewer({ pdfUrl }){\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);  \n\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        setNumPages(numPages);\n    }\n\n    var file;\n    if(pdfUrl===''){\n        file = sampleFile\n    }\n    else{\n        file = Api.getFilePdfApi + pdfUrl;\n    }\n\n    return (\n        <StyledContainer>\n            <Document\n                file={file} \n                // file={Api.getFilePdfApi + pdfUrl} \n                onLoadSuccess={onDocumentLoadSuccess}>\n                <Page pageNumber={pageNumber} />\n            </Document>\n            \n            <div className=\"pagination\">\n                <Button className=\"prev-btn\"><span onClick={() => pageNumber > 1 ? setPageNumber(pageNumber - 1) : null}><ChevronLeftIcon/></span></Button>\n                <span> Page {pageNumber} of {numPages} </span>\n                <Button className=\"next-btn\"><span color=\"primary\" onClick={() => pageNumber < numPages ? setPageNumber(pageNumber + 1) : null}><ChevronRightIcon/></span></Button>\n            </div>\n        </StyledContainer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}