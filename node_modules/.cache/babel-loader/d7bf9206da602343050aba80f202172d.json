{"ast":null,"code":"var _jsxFileName = \"/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/JobCreator.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from \"styled-components\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Tooltip, IconButton, Select, FormControl, MenuItem, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    width: '100%',\n    margin: 0\n  }\n}));\nconst StyledContainer = styled.div`\n    display: ${props => props.openModal ? \"flex\" : \"none\"};\n    position: fixed;\n    background-color: rgba(0,0,0,.5);\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    overflow: hidden;\n    z-index: 1000;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    .modal-window{\n        width: 40rem;\n        border-radius: 5px;\n        background-color: white;\n        overflow: auto;\n        box-shadow: 0px 7px 10px;\n        position: relative;\n    }\n    .close-btn{\n        position: absolute;\n        right: 0;\n    }\n    .modal-contents-container{\n        margin: 1rem;\n    }\n    .job-input-label{\n        font-size:.8rem;\n        margin-bottom: 0;\n        margin-top: .5rem;\n    }\n    .job-input{\n        width: 100%;\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        padding: .4rem;\n    }\n    .job-input-helper-text{\n        font-size:.5rem;\n        margin-left: .2rem;\n        color: rgba(0,0,0,.4);\n    }\n    .create-btn{\n        margin-top: 1.5rem;\n    }\n    .add-entry-btn-wrapper{\n        width: 100%;\n        margin-top: 1rem;\n        display: inline-flex;\n        justify-content: space-between;\n    }\n    .entry-container{\n        max-height: 400px;\n        overflow-y: auto;\n        .entry{\n            display: flex;\n            flex-direction: row;\n        }\n        label{\n            font-size: .8em;\n            color: rgba(0,0,0,.5);\n            margin: 0;\n        }\n        input{\n            border: 1px solid #c6c6c6;\n            border-radius: 5px;\n            padding: .5rem;\n        }\n    }\n  \n`;\n_c = StyledContainer;\nexport default function JobCreator({\n  openModal,\n  setOpenModal,\n  setTasks,\n  tasks\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [currentTask, setCurrentTask] = React.useState('');\n  var attributesLength = 0;\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleSelectCurrentTask = e => {\n    setCurrentTask(e.target.value);\n  };\n\n  const handleClickAddEntry = () => {\n    attributesLength += 1;\n    $('#entry-container').append(`<div className='entry' style=\"display:flex;flex-direction:row;\">\n                <div style=\"width:30%;\">\n                    <div><label htmlFor='entry-key-${attributesLength}'>Key</label></div>\n                    <input id='entry-key-${attributesLength}' style=\"width:100%;\"></input>\n                </div>\n                <div style=\"width:70%; margin-left: .5rem;\">\n                    <div><label htmlFor='entry-value-${attributesLength}'>Value</label></div>\n                    <input id='entry-value-${attributesLength}' style=\"width:100%;\"></input>\n                </div>\n            </div>`);\n  };\n\n  const handleClickCreate = () => {\n    var job = {};\n\n    for (var i = 1; i <= attributesLength; i++) {\n      const key = $(`#entry-key-${i}`).val();\n      const value = $(`#entry-value-${i}`).val();\n      job[key] = value;\n    }\n\n    console.log(job);\n    var tempJobs = [...tasks];\n    tempJobs.map(entry => {\n      if (entry.name === currentTask) {\n        return entry.jobs.push(job);\n      }\n\n      return null;\n    });\n    setTasks(tempJobs);\n    $('#entry-container').children().remove();\n    attributesLength = 0;\n    setOpenModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    openModal: openModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-window\",\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Close\",\n        placement: \"left\",\n        className: \"close-btn\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"delete\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-contents-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-muted\",\n          children: \"Create Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"job-task\",\n          className: \"text-muted job-input-label\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"job-task\",\n          variant: \"outlined\",\n          margin: \"dense\",\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"current-task-select-label\",\n            id: \"current-task-select\",\n            value: currentTask,\n            onChange: handleSelectCurrentTask,\n            children: tasks.map((task, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: task.name,\n              children: task.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-entry-btn-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-muted\",\n            children: \"Job Attributes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"add-entry-btn\",\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: handleClickAddEntry,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entry-container\",\n          id: \"entry-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"create-btn\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleClickCreate,\n          children: \"Job \\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobCreator, \"/XKzaxEgsP5Z9Jt9saczciDmQk8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = JobCreator;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"JobCreator\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/JobCreator.js"],"names":["React","styled","CloseIcon","Tooltip","IconButton","Select","FormControl","MenuItem","Button","makeStyles","$","useStyles","theme","formControl","width","margin","StyledContainer","div","props","openModal","JobCreator","setOpenModal","setTasks","tasks","classes","currentTask","setCurrentTask","useState","attributesLength","handleClose","handleSelectCurrentTask","e","target","value","handleClickAddEntry","append","handleClickCreate","job","i","key","val","console","log","tempJobs","map","entry","name","jobs","push","children","remove","task"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Tooltip, IconButton, Select, FormControl, MenuItem, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles'\nimport $ from 'jquery';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        width: '100%',\n        margin: 0\n    }\n}));\n\n\nconst StyledContainer = styled.div`\n    display: ${props => props.openModal ? \"flex\" : \"none\"};\n    position: fixed;\n    background-color: rgba(0,0,0,.5);\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    overflow: hidden;\n    z-index: 1000;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    .modal-window{\n        width: 40rem;\n        border-radius: 5px;\n        background-color: white;\n        overflow: auto;\n        box-shadow: 0px 7px 10px;\n        position: relative;\n    }\n    .close-btn{\n        position: absolute;\n        right: 0;\n    }\n    .modal-contents-container{\n        margin: 1rem;\n    }\n    .job-input-label{\n        font-size:.8rem;\n        margin-bottom: 0;\n        margin-top: .5rem;\n    }\n    .job-input{\n        width: 100%;\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        padding: .4rem;\n    }\n    .job-input-helper-text{\n        font-size:.5rem;\n        margin-left: .2rem;\n        color: rgba(0,0,0,.4);\n    }\n    .create-btn{\n        margin-top: 1.5rem;\n    }\n    .add-entry-btn-wrapper{\n        width: 100%;\n        margin-top: 1rem;\n        display: inline-flex;\n        justify-content: space-between;\n    }\n    .entry-container{\n        max-height: 400px;\n        overflow-y: auto;\n        .entry{\n            display: flex;\n            flex-direction: row;\n        }\n        label{\n            font-size: .8em;\n            color: rgba(0,0,0,.5);\n            margin: 0;\n        }\n        input{\n            border: 1px solid #c6c6c6;\n            border-radius: 5px;\n            padding: .5rem;\n        }\n    }\n  \n`;\n\nexport default function JobCreator({ openModal, setOpenModal, setTasks, tasks }) {\n    const classes = useStyles();\n    const [currentTask, setCurrentTask] = React.useState('');\n\n    var attributesLength = 0;\n\n    const handleClose = () => {\n        setOpenModal(false);\n    }\n\n    const handleSelectCurrentTask = (e) => {\n        setCurrentTask(e.target.value);\n    }\n\n    const handleClickAddEntry = () => {\n\n        attributesLength += 1;\n\n        $('#entry-container').append(\n            `<div className='entry' style=\"display:flex;flex-direction:row;\">\n                <div style=\"width:30%;\">\n                    <div><label htmlFor='entry-key-${attributesLength}'>Key</label></div>\n                    <input id='entry-key-${attributesLength}' style=\"width:100%;\"></input>\n                </div>\n                <div style=\"width:70%; margin-left: .5rem;\">\n                    <div><label htmlFor='entry-value-${attributesLength}'>Value</label></div>\n                    <input id='entry-value-${attributesLength}' style=\"width:100%;\"></input>\n                </div>\n            </div>`\n        );\n    }\n\n    const handleClickCreate = () => {\n\n        var job = {};\n\n        for (var i = 1; i <= attributesLength; i++) {\n            const key = $(`#entry-key-${i}`).val();\n            const value = $(`#entry-value-${i}`).val();\n\n            job[key] = value;\n        }\n\n        console.log(job);\n\n\n        var tempJobs = [...tasks];\n        tempJobs.map((entry) => {\n            if (entry.name === currentTask) {\n                return entry.jobs.push(job);\n            }\n            return null;\n        })\n        setTasks(tempJobs);\n\n        $('#entry-container').children().remove();\n        attributesLength = 0;\n        setOpenModal(false);\n    }\n\n    return (\n        <StyledContainer openModal={openModal}>\n            <div className=\"modal-window\">\n                <Tooltip title=\"Close\" placement=\"left\" className=\"close-btn\">\n                    <IconButton aria-label=\"delete\" onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n                <div className=\"modal-contents-container\">\n                    <h5 className=\"text-muted\">Create Job</h5>\n                    <label htmlFor=\"job-task\" className=\"text-muted job-input-label\">Task</label>\n                    <FormControl id='job-task' variant=\"outlined\" margin='dense' className={classes.formControl}>\n                        <Select\n                            labelId=\"current-task-select-label\"\n                            id=\"current-task-select\"\n                            value={currentTask}\n                            onChange={handleSelectCurrentTask}\n                        >\n                            {tasks.map((task, i) => (\n                                <MenuItem key={i} value={task.name}>{task.name}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <div className='add-entry-btn-wrapper'>\n                        <div className=\"text-muted\">Job Attributes</div>\n                        <Button className='add-entry-btn' variant=\"outlined\" color=\"primary\" onClick={handleClickAddEntry}>+</Button>\n                    </div>\n                    <div className='entry-container' id='entry-container'></div>\n                    <Button className=\"create-btn\" fullWidth variant=\"contained\" color=\"primary\" onClick={handleClickCreate}>Job 생성</Button>\n                </div>\n            </div>\n        </StyledContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}