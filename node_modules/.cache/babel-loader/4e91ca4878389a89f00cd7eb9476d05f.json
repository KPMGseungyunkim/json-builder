{"ast":null,"code":"var _jsxFileName = \"/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/JobList.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Avatar } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport WorkIcon from '@material-ui/icons/Work';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport EditIcon from '@material-ui/icons/Edit';\nimport React from 'react';\nimport styled from \"styled-components\";\nimport JobCreator from './JobCreator';\nimport JobModifier from './JobModifier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled.div`\n    .btns-container{\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1.1rem;\n    }\n    \n    .jobs-container{\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        height: 48.7rem;\n        overflow-x: hidden;\n        overflow-y: auto;\n        padding: 0 1rem;\n    }\n    .job-add-btn{\n        width: 100px;\n    }\n    .task-container{\n        margin-bottom: .5rem;\n        padding: 1rem;\n        border-bottom: 1px solid rgba(0,0,0,.05);\n    }\n    .job-row{\n        overflow: auto;\n        display: flex;\n        flex-direction: row;\n    }\n    .job-card{\n        width: 300px;\n        padding: 1rem;\n        margin-right: 1rem;\n        background-color: rgba(0,0,0,.05);\n        border-radius: 5px;\n        height: 200px;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        overflow: hidden;\n        &:hover{\n            background-color: rgba(0,0,0,.09);\n        }\n        .job-card-header{\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n            align-items: flex-start;\n        }\n        .job-card-title{\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            margin-bottom: 1rem;\n        }\n        .job-card-content{\n            height: 100%;\n            overflow-x: auto;\n            overflow-y: auto;\n        }\n        .job-card-table-row{\n            white-space: nowrap;\n            font-size: smaller;\n            width: 100%;\n        }\n        .row-border-top{\n            border-top: 1.5px solid white;\n            \n        }\n        .job-card-table-cell-name{\n            border-right: 1.5px solid white;\n            padding-right: .5rem;\n            margin-right: .5rem;\n            font-weight: bolder;\n        \n        }\n        .job-card-table-cell-data{\n            padding-left: .5rem;\n            font-size: smaller;\n            width: 200%;\n        }\n    }\n`;\n_c = StyledContainer;\nexport default function JobList({\n  tasks,\n  setTasks\n}) {\n  _s();\n\n  const [openModal, setOpenModal] = React.useState(false);\n  const [openModifierModal, setOpenModifierModal] = React.useState(false);\n  const [editedJob, setEditedJob] = React.useState('');\n  const [taskIncludeEditedJob, setTaskIncludeEditedJob] = React.useState('');\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleOpenModifierModal = (job, task) => {\n    setTaskIncludeEditedJob(task);\n    setEditedJob(job);\n    setOpenModifierModal(true);\n  };\n\n  const handleClickRemove = (i, task) => {\n    var tempJobs = [...tasks];\n    var targetTask = tasks.find(j => j.name === task);\n    var targetTaskIndex = tempJobs.indexOf(targetTask);\n    targetTask.jobs.splice(i, 1);\n    tempJobs.splice(targetTaskIndex, 1);\n    tempJobs.splice(targetTaskIndex, 0, targetTask);\n    setTasks(tempJobs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btns-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Job \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"job-add-btn\",\n        variant: \"outlined\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: handleOpenModal,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 127\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JobCreator, {\n      openModal: openModal,\n      setOpenModal: setOpenModal,\n      setTasks: setTasks,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JobModifier, {\n      openModal: openModifierModal,\n      setOpenModal: setOpenModifierModal,\n      editedJob: editedJob,\n      setEditedJob: setEditedJob,\n      tasks: tasks,\n      taskIncludeEditedJob: taskIncludeEditedJob,\n      setTaskIncludeEditedJob: setTaskIncludeEditedJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-container\",\n      children: tasks.map((entry, taskIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: entry.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-row\",\n            children: entry.jobs.map((job, jobIndex) => {\n              const jobCardId = `${entry.name.replaceAll(' ', '')}-${jobIndex}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                id: jobCardId,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"job-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"job-card-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"job-card-title\",\n                      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                        children: /*#__PURE__*/_jsxDEV(WorkIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 160,\n                          columnNumber: 89\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 81\n                      }, this), \"\\u2002 Job \", jobIndex + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        variant: \"outlined\",\n                        className: \"job-card-remove-btn\",\n                        onClick: () => handleClickRemove(jobIndex, entry.name),\n                        children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 180\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        variant: \"outlined\",\n                        className: \"job-card-edit-btn\",\n                        onClick: () => handleOpenModifierModal(job, entry),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 163,\n                          columnNumber: 174\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"job-card-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"job-card-table\",\n                      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: Object.keys(job).map((k, i) => {\n                          const rowKey = `${k}-${JSON.stringify(job[k])}-${i}`;\n                          return /*#__PURE__*/_jsxDEV(\"tr\", {\n                            className: i !== 0 ? 'job-card-table-row row-border-top' : 'job-card-table-row',\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              className: \"job-card-table-cell-name text-muted\",\n                              children: k\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 173,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              className: \"job-card-table-cell-data\",\n                              children: JSON.stringify(job[k]).replaceAll(\"\\\"\", \"\")\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 174,\n                              columnNumber: 73\n                            }, this)]\n                          }, rowKey, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 172,\n                            columnNumber: 69\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 41\n                }, this)\n              }, jobIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)]\n        }, taskIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobList, \"etPOFpJEB7QE+Qe0fqMNjGJM7I4=\");\n\n_c2 = JobList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"JobList\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/JobList.js"],"names":["Button","Avatar","AddIcon","WorkIcon","RemoveIcon","EditIcon","React","styled","JobCreator","JobModifier","StyledContainer","div","JobList","tasks","setTasks","openModal","setOpenModal","useState","openModifierModal","setOpenModifierModal","editedJob","setEditedJob","taskIncludeEditedJob","setTaskIncludeEditedJob","handleOpenModal","handleOpenModifierModal","job","task","handleClickRemove","i","tempJobs","targetTask","find","j","name","targetTaskIndex","indexOf","jobs","splice","map","entry","taskIndex","jobIndex","jobCardId","replaceAll","Object","keys","k","rowKey","JSON","stringify"],"mappings":"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","sourcesContent":["import { Button, Avatar } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport WorkIcon from '@material-ui/icons/Work';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport EditIcon from '@material-ui/icons/Edit';\nimport React from 'react';\nimport styled from \"styled-components\";\nimport JobCreator from './JobCreator';\nimport JobModifier from './JobModifier';\n\n\n\nconst StyledContainer = styled.div`\n    .btns-container{\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1.1rem;\n    }\n    \n    .jobs-container{\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        height: 48.7rem;\n        overflow-x: hidden;\n        overflow-y: auto;\n        padding: 0 1rem;\n    }\n    .job-add-btn{\n        width: 100px;\n    }\n    .task-container{\n        margin-bottom: .5rem;\n        padding: 1rem;\n        border-bottom: 1px solid rgba(0,0,0,.05);\n    }\n    .job-row{\n        overflow: auto;\n        display: flex;\n        flex-direction: row;\n    }\n    .job-card{\n        width: 300px;\n        padding: 1rem;\n        margin-right: 1rem;\n        background-color: rgba(0,0,0,.05);\n        border-radius: 5px;\n        height: 200px;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        overflow: hidden;\n        &:hover{\n            background-color: rgba(0,0,0,.09);\n        }\n        .job-card-header{\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n            align-items: flex-start;\n        }\n        .job-card-title{\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            margin-bottom: 1rem;\n        }\n        .job-card-content{\n            height: 100%;\n            overflow-x: auto;\n            overflow-y: auto;\n        }\n        .job-card-table-row{\n            white-space: nowrap;\n            font-size: smaller;\n            width: 100%;\n        }\n        .row-border-top{\n            border-top: 1.5px solid white;\n            \n        }\n        .job-card-table-cell-name{\n            border-right: 1.5px solid white;\n            padding-right: .5rem;\n            margin-right: .5rem;\n            font-weight: bolder;\n        \n        }\n        .job-card-table-cell-data{\n            padding-left: .5rem;\n            font-size: smaller;\n            width: 200%;\n        }\n    }\n`;\n\nexport default function JobList({ tasks, setTasks }) {\n    const [openModal, setOpenModal] = React.useState(false);\n    const [openModifierModal, setOpenModifierModal] = React.useState(false);\n    const [editedJob, setEditedJob] = React.useState('');\n    const [taskIncludeEditedJob, setTaskIncludeEditedJob] = React.useState('');\n\n\n    const handleOpenModal = () => {\n        setOpenModal(true);\n    };\n\n    const handleOpenModifierModal = (job, task) => {\n        setTaskIncludeEditedJob(task);\n        setEditedJob(job);\n        \n        setOpenModifierModal(true);\n    }\n\n    const handleClickRemove = (i, task) => {\n        var tempJobs = [...tasks];\n        var targetTask = tasks.find(j => j.name === task);\n        var targetTaskIndex = tempJobs.indexOf(targetTask);\n        targetTask.jobs.splice(i, 1);\n        tempJobs.splice(targetTaskIndex, 1);\n        tempJobs.splice(targetTaskIndex, 0, targetTask);\n        setTasks(tempJobs);\n    }\n\n\n    return (\n        <StyledContainer>\n            <div className='btns-container'>\n                <h5>Job 목록</h5>\n                <Button className=\"job-add-btn\" variant=\"outlined\" color=\"primary\" aria-label=\"add\" onClick={handleOpenModal}><AddIcon /></Button>\n            </div>\n            <JobCreator\n                openModal={openModal}\n                setOpenModal={setOpenModal}\n                setTasks={setTasks}\n                tasks={tasks}\n            />\n            <JobModifier \n                openModal={openModifierModal}\n                setOpenModal={setOpenModifierModal}\n                editedJob={editedJob}\n                setEditedJob={setEditedJob}\n                tasks={tasks}\n                taskIncludeEditedJob={taskIncludeEditedJob}\n                setTaskIncludeEditedJob={setTaskIncludeEditedJob}\n            />\n\n            <div className=\"jobs-container\">\n                {tasks.map((entry, taskIndex) => {\n                    return (\n                        <div key={taskIndex} className=\"task-container\"> \n                            <h5>{entry.name}</h5>\n                            <div className='job-row'>{entry.jobs.map((job, jobIndex) => {\n                                const jobCardId = `${entry.name.replaceAll(' ', '')}-${jobIndex}`;\n                                return (\n                                    <div key={jobIndex} id={jobCardId}>\n                                        <div className=\"job-card\">\n                                            <div className='job-card-header'>\n                                                <div className='job-card-title'><Avatar><WorkIcon /></Avatar>&ensp; Job {jobIndex + 1}</div>\n                                                <div>\n                                                <Button color=\"primary\" variant=\"outlined\" className='job-card-remove-btn' onClick={() => handleClickRemove(jobIndex, entry.name)}><RemoveIcon /></Button>                                            \n                                                <Button color=\"primary\" variant=\"outlined\" className='job-card-edit-btn' onClick={() => handleOpenModifierModal(job, entry)}><EditIcon /></Button>                                            \n                                                </div>\n                                            </div>\n                                            <div className='job-card-content'>\n                                                <table className='job-card-table'>\n                                                    <tbody>\n                                                        {Object.keys(job).map((k, i) => {\n                                                                const rowKey = `${k}-${JSON.stringify(job[k])}-${i}`;\n                                                                return (\n                                                                    <tr className={i !== 0 ? 'job-card-table-row row-border-top' : 'job-card-table-row'} key={rowKey}>\n                                                                        <td className=\"job-card-table-cell-name text-muted\">{k}</td>\n                                                                        <td className=\"job-card-table-cell-data\">{JSON.stringify(job[k]).replaceAll(\"\\\"\", \"\")}</td>\n                                                                    </tr>\n                                                                );\n                                                            }\n                                                            )}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </StyledContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}