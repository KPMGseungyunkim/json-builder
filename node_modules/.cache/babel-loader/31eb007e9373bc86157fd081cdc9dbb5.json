{"ast":null,"code":"var _jsxFileName = \"/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/RunButtons.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      marginBottom: theme.spacing(1)\n    }\n  }\n}));\nconst StyledContainer = styled.div`\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    .taskset-upload{\n        display: none;\n    }\n    .taskset-upload-btn{\n        margin: 0;\n    }\n`;\n_c = StyledContainer;\nexport default function RunButtons({\n  setModelNames,\n  setResultModalShown,\n  setTaskSetName,\n  setContext,\n  setTasks,\n  taskSetName,\n  modelNames,\n  context,\n  tasks,\n  setResultJson\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const handleUploadFile = e => {\n    var file = e.target.files[0];\n    var fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const newJson = JSON.parse(fileReader.result);\n      var uploadedTaskName = newJson['task_name'];\n      var uploadedModelNames = newJson['model_list'];\n      var uploadedContext = newJson['context'];\n      var uploadedTasks = newJson['tasks'];\n      setTaskSetName(uploadedTaskName);\n      setModelNames(uploadedModelNames);\n      setContext(uploadedContext);\n      setTasks(uploadedTasks);\n    };\n\n    fileReader.readAsText(file);\n    file = null;\n  };\n\n  const createJson = () => {\n    const json = {};\n    json.task_name = taskSetName;\n    json.model_list = modelNames;\n    json.tasks = tasks;\n    json.context = context;\n    setResultJson(json);\n  };\n\n  const handleComplete = () => {\n    createJson();\n    setResultModalShown(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskset-upload\",\n        className: \"taskset-upload-btn\",\n        children: \"\\uBD88\\uB7EC\\uC624\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"taskset-upload\",\n      id: \"taskset-upload\",\n      onChange: handleUploadFile,\n      accept: \".json,.txt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleComplete,\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RunButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = RunButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"RunButtons\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/RunButtons.js"],"names":["React","styled","makeStyles","Button","useStyles","theme","root","marginBottom","spacing","StyledContainer","div","RunButtons","setModelNames","setResultModalShown","setTaskSetName","setContext","setTasks","taskSetName","modelNames","context","tasks","setResultJson","classes","handleUploadFile","e","file","target","files","fileReader","FileReader","onload","newJson","JSON","parse","result","uploadedTaskName","uploadedModelNames","uploadedContext","uploadedTasks","readAsText","createJson","json","task_name","model_list","handleComplete"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n        marginBottom: theme.spacing(1),\n      },\n  },\n}));\n\n\n\nconst StyledContainer = styled.div`\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    .taskset-upload{\n        display: none;\n    }\n    .taskset-upload-btn{\n        margin: 0;\n    }\n`;\n\nexport default function RunButtons({ \n    setModelNames, setResultModalShown, setTaskSetName, setContext, setTasks,\n    taskSetName, modelNames, context, tasks, \n    setResultJson\n }) {\n    const classes = useStyles();\n\n    const handleUploadFile = (e) => {\n        var file = e.target.files[0];\n        var fileReader = new FileReader();\n        fileReader.onload = () => {\n            const newJson = JSON.parse(fileReader.result);\n\n            var uploadedTaskName = newJson['task_name'];\n            var uploadedModelNames = newJson['model_list'];\n            var uploadedContext = newJson['context'];\n            var uploadedTasks = newJson['tasks'];\n\n            setTaskSetName(uploadedTaskName); \n            setModelNames(uploadedModelNames);\n            setContext(uploadedContext);\n            setTasks(uploadedTasks);\n\n        }\n        fileReader.readAsText(file);\n        file = null;\n    }\n    \n    const createJson = () =>{\n        const json ={};\n        json.task_name = taskSetName;\n        json.model_list = modelNames;\n        json.tasks = tasks;\n        json.context= context;\n\n        setResultJson(json);\n    }\n\n    const handleComplete = () => {\n        createJson();\n        setResultModalShown(true);\n    }\n\n    return (\n        <StyledContainer className={classes.root}>\n\n            <Button variant=\"outlined\" color=\"primary\"><label htmlFor=\"taskset-upload\" className=\"taskset-upload-btn\">불러오기</label></Button>\n            <input \n                type=\"file\"\n                className=\"taskset-upload\" id=\"taskset-upload\" \n                onChange={handleUploadFile}\n                accept=\".json,.txt\"\n            ></input> \n            <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>완료</Button>\n        </StyledContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}