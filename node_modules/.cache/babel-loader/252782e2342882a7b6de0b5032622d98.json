{"ast":null,"code":"var _jsxFileName = \"/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/Taskset.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport EditIcon from '@material-ui/icons/Save';\nimport $ from 'jquery';\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  bottomContainer: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'stretch',\n    marginBottom: theme.spacing(1)\n  },\n  topContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'stretch'\n  },\n  btn: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst StyledContainer = styled.div`\n    .model-list-container{\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        overflow-x: auto;\n        overflow-y: auto;\n        height: 7rem;\n        word-wrap: break-word;\n    }\n    .input-field{\n        width: 100%;\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        padding: .5rem;\n    }\n    .context-input-field{\n        width: 100%;\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        padding: .5rem;\n    }\n    label{\n        font-size: xx-small;\n        margin: 0;\n    }\n`;\n_c = StyledContainer;\nexport default function Taskset({\n  modelNames,\n  setModelNames,\n  taskSetName,\n  setTaskSetName,\n  context,\n  setContext\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [newTaskSetName, setNewTaskSetName] = React.useState('');\n  const [newModel, setNewModel] = React.useState('');\n  const [newContext, setNewContext] = React.useState('');\n  const [checked, setChecked] = React.useState([]);\n\n  const handleChangeModel = e => {\n    setNewModel(e.target.value);\n  };\n\n  const handleChangeTaskSetName = e => {\n    setNewTaskSetName(e.target.value);\n  };\n\n  const handleChangeContext = e => {\n    setNewContext(e.target.value);\n  };\n\n  const handleClickEditTaskSetName = () => {\n    setTaskSetName(newTaskSetName);\n  };\n\n  const handleClickEditContext = () => {\n    setContext(newContext);\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleClickAdd = () => {\n    if (newModel === '') {\n      alert('모델 명을 입력하세요.');\n      return;\n    }\n\n    const temp = [...modelNames];\n    temp.push(newModel);\n    setModelNames(temp);\n    $('#new-model-input').val('');\n    setNewModel('');\n  };\n\n  const handleClickRemove = () => {\n    if (checked.length === 0) {\n      alert(\"삭제할 모델을 선택하세요.\");\n      return;\n    }\n\n    var temp = [...modelNames];\n    checked.map(c => {\n      return temp = temp.filter(m => m !== c);\n    });\n    setModelNames(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Taskset \\uC791\\uC5C5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Taskset Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        defaultValue: taskSetName,\n        placeholder: \"Enter a taskset name\",\n        readOnly: false,\n        onChange: handleChangeTaskSetName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        variant: \"outlined\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: handleClickEditTaskSetName,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 138\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Context\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"context-input-field\",\n        defaultValue: context,\n        placeholder: \"Enter a context\",\n        readOnly: false,\n        onChange: handleChangeContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        variant: \"outlined\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: handleClickEditContext,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 134\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Model List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-list-container\",\n      children: modelNames.map((t, i) => {\n        const labelId = `checkbox-list-label-${t}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          dense: true,\n          button: true,\n          onClick: handleToggle(t),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: checked.indexOf(t) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': labelId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: t\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.bottomContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        placeholder: \"Enter a new model\",\n        id: \"new-model-input\",\n        onChange: handleChangeModel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        variant: \"outlined\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: handleClickAdd,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 126\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        variant: \"outlined\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: handleClickRemove,\n        children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 129\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Taskset, \"VjsiKNoBy67AVXJjxRzaS12pz64=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Taskset;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Taskset\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/json-builder/src/pages/json-builder/components/Taskset.js"],"names":["Button","Checkbox","ListItem","ListItemIcon","ListItemText","makeStyles","AddIcon","RemoveIcon","EditIcon","$","React","styled","useStyles","theme","bottomContainer","marginTop","spacing","display","flexDirection","justifyContent","alignItems","marginBottom","topContainer","btn","marginLeft","StyledContainer","div","Taskset","modelNames","setModelNames","taskSetName","setTaskSetName","context","setContext","classes","newTaskSetName","setNewTaskSetName","useState","newModel","setNewModel","newContext","setNewContext","checked","setChecked","handleChangeModel","e","target","value","handleChangeTaskSetName","handleChangeContext","handleClickEditTaskSetName","handleClickEditContext","handleToggle","currentIndex","indexOf","newChecked","push","splice","handleClickAdd","alert","temp","val","handleClickRemove","length","map","c","filter","m","t","i","labelId"],"mappings":"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","sourcesContent":["import { Button, Checkbox, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport EditIcon from '@material-ui/icons/Save';\nimport $ from 'jquery';\nimport React from 'react';\nimport styled from \"styled-components\";\n\nconst useStyles = makeStyles((theme) => ({\n    bottomContainer: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'stretch',\n        marginBottom: theme.spacing(1),\n    },\n    topContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'stretch',\n    },\n    btn: {\n        marginLeft: theme.spacing(1),\n    }\n}));\n\nconst StyledContainer = styled.div`\n    .model-list-container{\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        overflow-x: auto;\n        overflow-y: auto;\n        height: 7rem;\n        word-wrap: break-word;\n    }\n    .input-field{\n        width: 100%;\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        padding: .5rem;\n    }\n    .context-input-field{\n        width: 100%;\n        border: 1px solid #c6c6c6;\n        border-radius: 5px;\n        padding: .5rem;\n    }\n    label{\n        font-size: xx-small;\n        margin: 0;\n    }\n`;\n\nexport default function Taskset({ modelNames, setModelNames, taskSetName, setTaskSetName, context, setContext }) {\n    const classes = useStyles();\n    const [newTaskSetName, setNewTaskSetName] = React.useState('');\n    const [newModel, setNewModel] = React.useState('');\n    const [newContext, setNewContext] = React.useState('');\n    const [checked, setChecked] = React.useState([]);\n\n    const handleChangeModel = (e) => {\n        setNewModel(e.target.value);\n    }\n\n    const handleChangeTaskSetName = (e) => {\n        setNewTaskSetName(e.target.value);\n    }\n\n    const handleChangeContext = (e) => {\n        setNewContext(e.target.value);\n    }\n\n    const handleClickEditTaskSetName = () => {\n        setTaskSetName(newTaskSetName);\n    }\n\n    const handleClickEditContext = () => {\n        setContext(newContext);\n    }\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const handleClickAdd = () => {\n        if (newModel === '') {\n            alert('모델 명을 입력하세요.');\n            return;\n        }\n        const temp = [...modelNames];\n        temp.push(newModel);\n        setModelNames(temp);\n        $('#new-model-input').val('');\n        setNewModel('');\n    }\n\n    const handleClickRemove = () => {\n        if (checked.length === 0) {\n            alert(\"삭제할 모델을 선택하세요.\");\n            return;\n        }\n        var temp = [...modelNames];\n        checked.map(c => {\n            return temp = temp.filter(m => m !== c);\n        });\n        setModelNames(temp);\n    }\n\n    return (\n        <StyledContainer>\n            <h5>Taskset 작업</h5>\n            {/* task set name */}\n            <label>Taskset Name</label>\n            <div className={classes.topContainer}>\n                <input type=\"text\" className=\"input-field\" defaultValue={taskSetName} placeholder=\"Enter a taskset name\" readOnly={false} onChange={handleChangeTaskSetName}></input>\n                <Button className={classes.btn} variant=\"outlined\" color=\"primary\" aria-label=\"add\" onClick={handleClickEditTaskSetName}><EditIcon /></Button>\n            </div>\n\n            {/* context */}\n            <label>Context</label>\n            <div className={classes.topContainer}>\n                <input type=\"text\" className=\"context-input-field\" defaultValue={context} placeholder=\"Enter a context\" readOnly={false} onChange={handleChangeContext}></input>\n                <Button className={classes.btn} variant=\"outlined\" color=\"primary\" aria-label=\"add\" onClick={handleClickEditContext}><EditIcon /></Button>\n            </div>\n            \n            {/* model list */}\n            <label>Model List</label>\n            <div className=\"model-list-container\">\n                {modelNames.map((t, i) => {\n                    const labelId = `checkbox-list-label-${t}`;\n                    return (\n                        <ListItem key={i} dense button onClick={handleToggle(t)}>\n                            <ListItemIcon>\n                                <Checkbox\n                                    edge=\"start\"\n                                    checked={checked.indexOf(t) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{ 'aria-labelledby': labelId }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={labelId} primary={t} />\n                        </ListItem>\n                    );\n                })}\n            </div>\n            <div className={classes.bottomContainer}>\n                <input\n                    className=\"input-field\"\n                    placeholder=\"Enter a new model\"\n                    id=\"new-model-input\"\n                    onChange={handleChangeModel}\n                />\n                <Button className={classes.btn} variant=\"outlined\" color=\"primary\" aria-label=\"add\" onClick={handleClickAdd}><AddIcon /></Button>\n                <Button className={classes.btn} variant=\"outlined\" color=\"primary\" aria-label=\"add\" onClick={handleClickRemove}><RemoveIcon /></Button>\n            </div>\n            \n\n        </StyledContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}